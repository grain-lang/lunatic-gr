import Bytes from "bytes"
import Int64 from "int64"
import Result from "result"
import Process from "lunatic/process"

record SomeData<a> {
  key: String,
  value: a,
}

let mailbox = Process.createMailbox()

export let _start = () => {
  let localdata = { key: "localdata", value: 54321 }

  let child = Result.unwrap(
    Process.spawn(() => {
      print("[subprocess] ðŸ‘‹ from spawned process!")
      print("[subprocess] receiving some data...")
      print(Result.unwrap(Process.receive(mailbox)))
      print("[subprocess] data within the closure:")
      print(localdata)
    })
  )

  print("[main proccess] Hello from the main process!")
  print("[main proccess] sending some data...")

  Process.send(child, { key: "datakey", value: 42 }, mailbox)
  Process.sleep(100L)
}

export let __lunatic_bootstrap = Process.__lunatic_bootstrap
